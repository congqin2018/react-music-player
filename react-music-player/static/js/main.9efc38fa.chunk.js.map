{"version":3,"sources":["utils/media-session.js","actions/index.js","components/AddSongs.jsx","components/Song.jsx","components/SongList.jsx","components/NowPlaying.jsx","views/PlayListView.jsx","components/SearchItem.jsx","components/SearchResultList.jsx","views/SearchView.jsx","components/Header.jsx","components/PlayingCtrl.jsx","views/PlayingView.jsx","utils/keyboardEvents.js","App.jsx","registerServiceWorker.js","reducers/songs.js","reducers/playState.js","reducers/common.js","reducers/index.js","reducers/searchResult.js","reducers/page.js","middleware.js","index.js","store/localStore.js"],"names":["store","mediaSessionEnabled","navigator","mediaSession","setActionHandler","state","getState","prevId","playState","songId","songs","length","dispatch","playSong","nextId","togglePlaying","media_session","s","song","id","metadata","window","MediaMetadata","title","name","artist","album","artwork","src","sizes","type","addNewSong","PLAYLIST_PAGE","SEARCH_PAGE","SETTINGS_PAGE","NOW_PLAYING_PAGE","addLocalSongs","localSongs","map","i","source","detail","addNetworkSong","networkSong","nowPlayingPage","AddSongs","addSong","e","add","_this","props","addSongs","Array","from","currentTarget","files","react_default","a","createElement","Fab_default","color","aria-label","component","htmlFor","style","position","bottom","right","zIndex","display","onChange","this","multiple","accept","Add_default","Component","connect","Song","_ref","handleClick","handleIconClick","ListItem_default","className","onClick","ListItemAvatar_default","Avatar_default","MusicNote_default","ListItemText_default","primary","secondary","concat","artists","secondaryTypographyProps","noWrap","ListItemSecondaryAction_default","IconButton_default","MoreVert_default","remove","play","_useState","useState","_useState2","Object","slicedToArray","anchorEl","setAnchorEl","_useState3","_useState4","activeSong","setActiveSong","setActiveSongItem","ind","_ref2","target","handleSongClick","marginBottom","Menu_default","open","Boolean","onClose","MenuItem_default","List_default","components_Song","key","lastModifiedDate","Divider_default","fontWeight","textAlign","NowPlaying","playingSong","currentTime","openNowPlaying","Paper_default","closest","LinearProgress_default","variant","value","playing","Pause_default","PlayCircleFilled_default","defaultProps","PlayListView","handleDragOver","event","preventDefault","stopPropagation","dataTransfer","dropEffect","_this2","_this$props","openSnackbar","toggle","onDragOver","onDrop","File","FileReader","FileList","Blob","toConsumableArray","filter","endsWith","components_SongList","components_AddSongs","components_NowPlaying","SearchItem","item","fetch","then","response","json","searchResult","components_SearchItem","SearchView","components_SearchResultList","menuOptions","option","page","icon","Search_default","PlaylistPlay_default","icons_List_default","Settings_default","Header","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openPage","setState","prevState","handleSearchClick","onSearch","keyword","handleInputChange","classes","AppBar_default","Toolbar_default","icons_Menu_default","Typography_default","grow","search","InputBase_default","placeholder","inputInput","searchIcon","height","SwipeableDrawer_default","anchor","onOpen","paddingTop","button","ListItemIcon_default","withStyles","theme","flexGrow","defineProperty","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","marginLeft","width","spacing","unit","PlayingCtrl","changeRepeat","repeat","repeatType","installEvent","setTimeout","_this$props2","playNext","playPrevious","timeDrag","Slider_default","_","newVal","max","min","defaultValue","RepeatOne_default","Repeat_default","opacity","SkipPrevious_default","PauseCircleFilled_default","SkipNext_default","Shuffle_default","PlayingView","justifyContent","alignItems","marginTop","Album_default","fontSize","components_PlayingCtrl","ACTION_KEYS","App","URL","revokeObjectURL","songEnded","_this$props3","updateTime","audioPlayer","duration","url","createObjectURL","document","replace","time","handleActionClick","handleRequestClose","snackBarOpen","snackMsg","hideSnackAction","handleSearch","searchSong","renderMain","_this$state","_this$props4","addToHomeScreenUIVisible","views_SearchView","msg","views_PlayListView","views_PlayingView","hasRejectedInstall","_this$props5","releaseKeyboardEvents","handlers","handler","upperCaseKey","code","toUpperCase","indexOf","addEventListener","removeEventListener","keyboardEvents","nextProps","_this3","_this$state2","console","log","pause","prompt","userChoice","choiceResult","outcome","_this4","_this$state3","_this$props6","Fragment","components_Header","hidden","controls","onEnded","onTimeUpdate","ref","audio","assign","kind","Snackbar_default","autoHideDuration","ContentProps","aria-describedby","message","action","Button_default","size","result","receiveSearchResult","fetchSongs","isLocalhost","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","initalState","initialState","sidebarOpen","reducers","combineReducers","arguments","undefined","index","objectSpread","middleware","next","group","info","groupEnd","muiTheme","createMuiTheme","deepPurple","thunk","LocalForage","localState","createStore","applyMiddleware","loggerMiddleware","mediaNotification","subscribe","ReactDOM","render","es","core_styles","src_App","getElementById","process","origin","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9efc38fa.chunk.js","sourcesContent":["import { togglePlaying, playSong } from '../actions';\n\nlet store;\nconst mediaSessionEnabled = ('mediaSession' in navigator);\nconst addNewSong = (id) => {\n  const state = store.getState();\n  navigator.mediaSession.metadata = new window.MediaMetadata({\n    title: state.songs[id]? state.songs[id].name :'unkown',\n    artist: 'Unknown',\n    album: 'Unknown Albumn',\n    artwork: [{\n      src: 'icons/mipmap-xhdpi/ic_launcher.png',\n      sizes: '96x96',\n      type: 'image/png',\n    }, {\n      src: 'icons/mipmap-xxhdpi/ic_launcher.png',\n      sizes: '144x144',\n      type: 'image/png',\n    }, {\n      src: 'icons/mipmap-xxxhdpi/ic_launcher.png',\n      sizes: '192x192',\n      type: 'image/png',\n    }, {\n      src: 'icons/playstore/icon.png',\n      sizes: '512x512',\n      type: 'image/png',\n    }],\n  });\n};\n\nconst addActionListeners = () => {\n  navigator.mediaSession.setActionHandler('previoustrack', () => {\n    if (store) {\n      const state = store.getState();\n      const prevId = state.playState.songId === 0\n        ? state.songs.length - 1 : state.playState.songId - 1;\n      store.dispatch(playSong(prevId));\n    }\n  });\n\n  navigator.mediaSession.setActionHandler('nexttrack', () => {\n    if (store) {\n      const state = store.getState();\n      const nextId = (state.playState.songId + 1) % state.songs.length;\n      store.dispatch(playSong(nextId));\n    }\n  });\n\n  navigator.mediaSession.setActionHandler('play', () => {\n    if (store) store.dispatch(togglePlaying());\n  });\n\n  navigator.mediaSession.setActionHandler('pause', () => {\n    if (store) store.dispatch(togglePlaying());\n  });\n};\nif (mediaSessionEnabled) addActionListeners();\n\nexport default {\n  setStore(s) {\n    store = s;\n  },\n  playSong(song) {\n    if (mediaSessionEnabled) {\n      addNewSong(song);\n    }\n  },\n};\n","import mediaSession from '../utils/media-session';\n\nexport const ADD_SONGS = 'ADD_SONGS';\nexport const REMOVE_SONGS = 'REMOVE_SONGS';\nexport const TOGGLE_PLAYING = 'TOGGLE_PLAYING';\nexport const FILTER_SONGS = 'FILTER_SONGS';\nexport const PLAY_SONG = 'PLAY_SONG';\nexport const RECEIVE_SEARCH_RESULT = 'RECEIVE_SEARCH_RESULT';\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\nexport const PLAYLIST_PAGE = 'PLAYLIST_PAGE';\nexport const SHUFFLE = 'SHUFFLE';\nexport const REPEAT = 'REPEAT';\nexport const SEARCH_PAGE = 'SEARCH_PAGE';\nexport const HOME_PAGE = 'HOME_PAGE';\nexport const SETTINGS_PAGE = 'SETTINGS_PAGE';\nexport const NOW_PLAYING_PAGE = 'NOW_PLAYING_PAGE';\n\nexport const addLocalSongs = localSongs => ({\n  type: ADD_SONGS,\n  songs: localSongs.map(i => ({source: 'local', detail: i}))\n});\n\nexport const addNetworkSong = networkSong => ({\n  type: ADD_SONGS,\n  songs: [{source: 'network', detail: networkSong}]\n});\n\nexport const removeSong = id => ({\n  type: REMOVE_SONGS,\n  id,\n});\n\nexport const playSong = (id) => {\n  mediaSession.playSong(id);\n  return {\n    type: PLAY_SONG,\n    id,\n  };\n};\n\nexport const repeatType = id => ({\n  type: REPEAT,\n  id,\n});\n\nexport const togglePlaying = () => ({\n  type: TOGGLE_PLAYING,\n});\n\nexport const toggleSidebar = () => ({\n  type: TOGGLE_SIDEBAR,\n});\n\nexport const filterSong = filter => ({\n  type: FILTER_SONGS,\n  filter,\n});\n\nexport const homePage = () => ({\n  type: HOME_PAGE,\n});\n\nexport const nowPlayingPage = () => ({\n  type: NOW_PLAYING_PAGE,\n});\n\nexport const settingsPage = () => ({\n  type: SETTINGS_PAGE,\n});\n\nexport const receiveSearchResult = json => ({\n  type: RECEIVE_SEARCH_RESULT,\n  songs: json.result.songs\n  // subreddit,\n  // posts: json.data.children.map(child => child.data),\n  // receivedAt: Date.now()\n})\n\nexport const fetchSongs = keyword => (dispatch, getState) => {\n  return fetch(`https://cors-anywhere.herokuapp.com/https://api.muxiv.com/search?keywords=${keyword}&offset=0&limit=20&type=1&lang=en`)\n  // return fetch(`https://api.muxiv.com/search?keywords=${keyword}&offset=0&limit=20&type=1&lang=en`)\n    .then(response => response.json())\n    // .then(json => dispatch(playSong(-1)))\n    // .then(json => console.log(json))\n    .then(json => dispatch(receiveSearchResult(json)))\n}\n\nexport const fetchDetailAndPlay = song => (dispatch, getState) => {\n\n  return fetch(`https://cors-anywhere.herokuapp.com/https://api.muxiv.com/music/url?id=${song.id}&lang=en#`)\n  .then(response => response.json())\n  .then(json => {\n    song['url'] = json[0]['url']\n    return song\n  })\n  .then(song => dispatch(addNetworkSong(song)))\n  .then(() => dispatch(playSong(-2)))\n  \n  \n  // .then()\n\n  // https://api.muxiv.com/music/url?id=5231115&lang=en#\n}\n// const fetchPosts = subreddit => dispatch => {\n//   dispatch(requestPosts(subreddit))\n//   return fetch(`https://www.reddit.com/r/${subreddit}.json`)\n//     .then(response => response.json())\n//     .then(json => dispatch(receivePosts(subreddit, json)))\n// }","import React, { Component } from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addLocalSongs } from '../actions';\n\nconst mapDispatchToProps = dispatch => ({\n  addSongs: songs => dispatch(addLocalSongs(songs)),\n});\n\nclass AddSongs extends Component {\n  addSong = (e) => {\n    const { addSongs: add } = this.props;\n    add(Array.from(e.currentTarget.files));\n  }\n\n  render() {\n    return (\n      <Fab\n        color=\"primary\"\n        aria-label=\"Add\"\n        component=\"label\"\n        htmlFor=\"song-input\"\n        style={{\n          position: 'fixed', bottom: '110px', right: '25px', zIndex: 3000,\n        }}\n      >\n        <input\n          style={{ display: 'none' }}\n          id=\"song-input\"\n          onChange={this.addSong}\n          type=\"file\"\n          multiple\n          accept=\"audio/mp3\"\n        />\n        <AddIcon />\n      </Fab>\n    );\n  }\n}\n\nAddSongs.propTypes = {\n  addSongs: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(AddSongs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport MusicNote from '@material-ui/icons/MusicNote';\n\nconst Song = ({ song, handleClick, handleIconClick }) => (\n  <ListItem className=\"song\" onClick={handleClick}>\n    <ListItemAvatar>\n      <Avatar>\n        <MusicNote />\n      </Avatar>\n    </ListItemAvatar>\n    <ListItemText\n      primary={song.detail.name}\n      secondary={song.source=='network' ? `${song.detail.artists[0].name} - ${song.detail.album.name}`:'local'}\n      secondaryTypographyProps={{noWrap: true}}\n    />\n    <ListItemSecondaryAction onClick={handleIconClick}>\n      <IconButton aria-label=\"Delete\">\n        <MoreVert />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n// secondary={`${item.artists[0].name} - ${item.album.name}`} \n//       secondaryTypographyProps={{noWrap: true}}\n\nSong.propTypes = {\n  song: PropTypes.objectOf(PropTypes.any).isRequired,\n  handleClick: PropTypes.func.isRequired,\n  handleIconClick: PropTypes.func.isRequired,\n};\nexport default Song;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport connect from 'react-redux/es/connect/connect';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { removeSong, playSong } from '../actions';\nimport Song from './Song';\n\nconst SongList = ({ songs, remove, play }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [activeSong, setActiveSong] = useState(-1);\n\n  const setActiveSongItem = ind => ({ target }) => {\n    setAnchorEl(target);\n    setActiveSong(ind);\n  };\n\n  const handleSongClick = ind => () => play(ind);\n\n  if (!songs.length) {\n    return (\n      <h4 style={{ fontWeight: 300, textAlign: 'center' }}>No Songs Present. Please Add Songs</h4>\n    );\n  }\n  return (\n    <div style={{ marginBottom: '100px' }}>\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\n        <MenuItem onClick={() => remove(activeSong)}>Remove Song</MenuItem>\n      </Menu>\n      <List>\n        {\n          songs.map((song, ind) => (\n            [\n              <Song\n                key={`song-${song.lastModifiedDate}`}\n                handleClick={handleSongClick(ind)}\n                handleIconClick={setActiveSongItem(ind)}\n                song={song}\n              />,\n              <Divider key={`divider-${song.lastModifiedDate}`} />,\n            ]\n          ))\n        }\n      </List>\n    </div>\n  );\n};\n\nSongList.propTypes = {\n  remove: PropTypes.func.isRequired,\n  play: PropTypes.func.isRequired,\n  songs: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)).isRequired,\n};\n\nexport default connect(null, { remove: removeSong, play: playSong })(SongList);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport Paper from '@material-ui/core/Paper';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport MusicNote from '@material-ui/icons/MusicNote';\nimport PlayIcon from '@material-ui/icons/PlayCircleFilled';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst NowPlaying = ({\n  playState, playingSong, currentTime, togglePlaying, openNowPlaying,\n}) => {\n  const handleClick = (e) => {\n    if (!e.target.closest('[type=\"button\"]') && playingSong) {\n      openNowPlaying();\n    }\n  };\n\n  return (\n    <Paper className=\"small-now-playing\" onClick={handleClick}>\n      <LinearProgress variant=\"determinate\" value={currentTime} />\n      <div className=\"now-playing-container\">\n        <Avatar>\n          <MusicNote />\n        </Avatar>\n        <div className=\"song-name\">\n          {playingSong&&playingSong.detail ? playingSong.detail.name : '[No song]'}\n        </div>\n        <button type=\"button\" onClick={togglePlaying}>\n          { playState.playing ? <PauseIcon /> : <PlayIcon /> }\n        </button>\n      </div>\n    </Paper>\n  );\n};\n\nNowPlaying.defaultProps = {\n  playingSong: null,\n};\n\nNowPlaying.propTypes = {\n  playState: propTypes.objectOf(propTypes.any).isRequired,\n  playingSong: propTypes.objectOf(propTypes.any),\n  currentTime: propTypes.number.isRequired,\n  togglePlaying: propTypes.func.isRequired,\n  openNowPlaying: propTypes.func.isRequired,\n};\n\nexport default NowPlaying;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\n\nimport AddSongs from '../components/AddSongs';\nimport SongList from '../components/SongList';\nimport NowPlaying from '../components/NowPlaying';\nimport { togglePlaying, nowPlayingPage, addLocalSongs } from '../actions';\n\nconst mapDispatchToProps = dispatch => ({\n  toggle: () => dispatch(togglePlaying()),\n  openNowPlaying: () => dispatch(nowPlayingPage()),\n  addSongs: songs => dispatch(addLocalSongs(songs)),\n});\n\nclass PlayListView extends Component {\n  handleDragOver = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    // eslint-disable-next-line no-param-reassign\n    event.dataTransfer.dropEffect = 'copy';\n  };\n\n  render() {\n    const {\n      songs, playState, openNowPlaying, openSnackbar, currentTime, addSongs: add, toggle,\n    } = this.props;\n    return (\n      <div\n        onDragOver={this.handleDragOver}\n        onDrop={(event) => {\n          this.handleDragOver(event);\n          if (window.File && window.FileReader && window.FileList && window.Blob) {\n            const files = [...event.dataTransfer.files].filter(({ name }) => name && name.endsWith('.mp3'));\n            if (files.length > 0) add(files);\n          } else {\n            openSnackbar('The File APIs are not fully supported in this browser.');\n          }\n          return false;\n        }}\n      >\n        <SongList songs={songs} />\n        <AddSongs />\n        <NowPlaying\n          togglePlaying={toggle}\n          playState={playState}\n          playingSong={songs[playState.songId]}\n          openNowPlaying={openNowPlaying}\n          currentTime={currentTime}\n        />\n      </div>\n    );\n  }\n}\n\nPlayListView.propTypes = {\n  openNowPlaying: propTypes.func.isRequired,\n  toggle: propTypes.func.isRequired,\n  addSongs: propTypes.func.isRequired,\n  songs: propTypes.arrayOf(propTypes.any).isRequired,\n  playState: propTypes.objectOf(propTypes.any).isRequired,\n  currentTime: propTypes.number.isRequired,\n  openSnackbar: propTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(PlayListView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport MusicNote from '@material-ui/icons/MusicNote';\n\nconst SearchItem = ({ item, handleClick }) => (\n  <ListItem className=\"song\" onClick={handleClick}>\n    <ListItemText\n      primary={item.name}\n      secondary={`${item.artists[0].name} - ${item.album.name}`} \n      secondaryTypographyProps={{noWrap: true}}\n    />\n  </ListItem>\n);\n\nSearchItem.propTypes = {\n  item: PropTypes.objectOf(PropTypes.any).isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\nexport default SearchItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport connect from 'react-redux/es/connect/connect';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { removeSong, fetchDetailAndPlay } from '../actions';\nimport Song from './Song';\nimport SearchItem from './SearchItem';\n\n\nconst SearchResultList = ({ searchResult, play }) => {\n\n    const handleSongClick = ind => () => play(searchResult[ind]);\n    if (!searchResult.length) {\n        return (\n            <h4 style={{ fontWeight: 300, textAlign: 'center' }}>No songs. Please search Songs</h4>\n        )\n    }\n    return (\n        <div style={{ marginBottom: '100px' }}>\n            <List>\n                {\n                    searchResult.map((item, ind) => (\n                        [\n                            <SearchItem\n                                key={`search-item-${item.id}`}\n                                handleClick={handleSongClick(ind)}\n                                item={item}\n                            />,\n                            <Divider key={`divider-${item.id}`} />\n                        ]\n                    ))\n                }\n            </List>\n        </div>\n    )\n}\n\n\nSearchResultList.propTypes = {\n  play: PropTypes.func.isRequired,\n  searchResult: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)).isRequired,\n};\n\nexport default connect(null, {play: fetchDetailAndPlay })(SearchResultList);\n\n\n// const SongList = ({ songs, remove, play }) => {\n//   const [anchorEl, setAnchorEl] = useState(null);\n\n//   const [activeSong, setActiveSong] = useState(-1);\n\n//   const setActiveSongItem = ind => ({ target }) => {\n//     setAnchorEl(target);\n//     setActiveSong(ind);\n//   };\n\n//   const handleSongClick = ind => () => play(ind);\n\n//   return (\n//     <div style={{ marginBottom: '100px' }}>\n\n//       <List>\n//         {\n//           songs.map((song, ind) => (\n//             [\n//               <Song\n//                 key={`song-${song.lastModifiedDate}`}\n//                 handleClick={handleSongClick(ind)}\n//                 handleIconClick={setActiveSongItem(ind)}\n//                 song={song}\n//               />,\n//               <Divider key={`divider-${song.lastModifiedDate}`} />,\n//             ]\n//           ))\n//         }\n//       </List>\n//     </div>\n//   );\n// };\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\n\nimport AddSongs from '../components/AddSongs';\nimport SearchResultList from '../components/SearchResultList';\nimport NowPlaying from '../components/NowPlaying';\nimport { togglePlaying, nowPlayingPage, addNetworkSong } from '../actions';\n\nconst mapDispatchToProps = dispatch => ({\n  toggle: () => dispatch(togglePlaying()),\n  openNowPlaying: () => dispatch(nowPlayingPage()),\n  addSongs: songs => dispatch(addNetworkSong(songs)),\n});\n\nclass SearchView extends Component {\n  handleDragOver = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    // eslint-disable-next-line no-param-reassign\n    event.dataTransfer.dropEffect = 'copy';\n  };\n\n  render() {\n    const {\n      searchResult, playState, openNowPlaying, openSnackbar, currentTime, addSongs: add, toggle,\n    } = this.props;\n    return (\n      <div\n        onDragOver={this.handleDragOver}\n        onDrop={(event) => {\n          this.handleDragOver(event);\n          if (window.File && window.FileReader && window.FileList && window.Blob) {\n            const files = [...event.dataTransfer.files].filter(({ name }) => name && name.endsWith('.mp3'));\n            if (files.length > 0) add(files);\n          } else {\n            openSnackbar('The File APIs are not fully supported in this browser.');\n          }\n          return false;\n        }}\n      >\n        <SearchResultList searchResult={searchResult} />\n        <AddSongs />\n        <NowPlaying\n          togglePlaying={toggle}\n          playState={playState}\n          playingSong={searchResult[playState.songId]}\n          openNowPlaying={openNowPlaying}\n          currentTime={currentTime}\n        />\n      </div>\n    );\n  }\n}\n\nSearchView.propTypes = {\n  openNowPlaying: propTypes.func.isRequired,\n  toggle: propTypes.func.isRequired,\n  addSongs: propTypes.func.isRequired,\n  searchResult: propTypes.arrayOf(propTypes.any).isRequired,\n  playState: propTypes.objectOf(propTypes.any).isRequired,\n  currentTime: propTypes.number.isRequired,\n  openSnackbar: propTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(SearchView);\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NowPlayingIcon from '@material-ui/icons/PlaylistPlay';\nimport PlayListIcon from '@material-ui/icons/List';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { createStyles, makeStyles, withStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\nimport {\n  SEARCH_PAGE, HOME_PAGE, SETTINGS_PAGE, NOW_PLAYING_PAGE, PLAYLIST_PAGE,\n} from '../actions';\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    }\n  },\n  search: {\n    display: 'flex',\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  // searchIcon: {\n  //   position: 'absolute',\n  //   // height: 40,\n  //   // width: 40,\n  //   height: '100%',\n  //   right: 0,\n  // },\n  inputInput: {\n    flexGrow: 1,\n    color: 'inherit',\n  }\n});\n\nconst styless = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openPage: type => dispatch({ type }),\n});\n\nconst menuOptions = [\n  {\n    option: 'Search',\n    page: SEARCH_PAGE,\n    icon: <SearchIcon />,\n  },\n  // {\n  //   option: 'Home',\n  //   page: HOME_PAGE,\n  //   icon: <HomeIcon />,\n  // },\n  {\n    option: 'NowPlaying',\n    page: NOW_PLAYING_PAGE,\n    icon: <NowPlayingIcon />,\n  },\n  {\n    option: 'Playlists',\n    page: PLAYLIST_PAGE,\n    icon: <PlayListIcon />,\n  },\n  {\n    option: 'Settings',\n    page: SETTINGS_PAGE,\n    icon: <SettingsIcon />,\n  },\n];\n\nclass Header extends Component {\n  \n  constructor(props) {\n    super(props);\n    const { classes } = props;\n    this.classes = classes;\n    // this.classes = useStyles();\n    this.state = {keyword : ''}\n  }\n\n  state = {\n    open: false,\n  };\n\n  openPage = page => () => {\n    const { openPage, playState, openSnackbar } = this.props;\n    this.setState(prevState => ({ open: !prevState.open }));\n    if (page === SETTINGS_PAGE) {\n      openSnackbar();\n      return;\n    }\n    // Don't Open now playing page when there is no song\n    if (!playState && page === NOW_PLAYING_PAGE) return;\n    if (page) openPage(page);\n  }\n\n  handleSearchClick = () => {\n    const { onSearch } = this.props;\n    onSearch(this.state.keyword);\n  }\n\n  handleInputChange = (e) => {\n    this.setState({keyword: e.target.value });\n  }\n\n  render() {\n    const { open } = this.state;\n\n    return (\n      <div>\n        <AppBar>\n          <Toolbar>\n            <IconButton onClick={this.openPage()} color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" className={this.classes.title}>\n              Music Player\n            </Typography>\n            <div className={this.classes.grow} />\n            <div className={this.classes.search}>\n              <InputBase placeholder=\"Search…\" className={this.classes.inputInput} onChange={this.handleInputChange}/>\n              <IconButton color=\"inherit\" className={this.classes.searchIcon} onClick={this.handleSearchClick} >\n                <SearchIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <div className=\"header-padding\" style={{ height: '55px' }} />\n        <SwipeableDrawer anchor=\"left\" open={open} onClose={this.openPage()} onOpen={this.openPage()}>\n          <div style={{ paddingTop: '50px' }} />\n          {\n            menuOptions.map(option => (\n              <ListItem key={option.option} button onClick={this.openPage(option.page)}>\n                <ListItemIcon>{option.icon}</ListItemIcon>\n                <ListItemText>{option.option}</ListItemText>\n              </ListItem>\n            ))\n          }\n        </SwipeableDrawer>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  openPage: propTypes.func.isRequired,\n  playState: propTypes.objectOf(propTypes.any).isRequired,\n  openSnackbar: propTypes.func.isRequired,\n  onSearch: propTypes.func.isRequired\n};\n\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(Header));\n// export default connect(null, mapDispatchToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport Slider from '@material-ui/lab/Slider';\nimport Paper from '@material-ui/core/Paper';\nimport SkipPrevious from '@material-ui/icons/SkipPrevious';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayIcon from '@material-ui/icons/PlayCircleFilled';\nimport PauseIcon from '@material-ui/icons/PauseCircleFilled';\nimport SkipNext from '@material-ui/icons/SkipNext';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport Repeat from '@material-ui/icons/Repeat';\nimport RepeatOne from '@material-ui/icons/RepeatOne';\nimport { repeatType, togglePlaying } from '../actions';\n\nconst mapStateToProps = state => ({\n  playState: state.playState,\n  repeatType: state.common.repeat,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeRepeat: id => dispatch(repeatType(id)),\n  togglePlaying: () => dispatch(togglePlaying()),\n});\n\nclass PlayingCtrl extends Component {\n  componentDidMount() {\n    const { installEvent } = this.props;\n    setTimeout(() => typeof installEvent === 'function' && installEvent(), 3000);\n  }\n\n  changeRepeat = () => {\n    const { repeatType: repeat, changeRepeat } = this.props;\n    const nextRepeat = repeat === 2 ? 0 : repeat + 1;\n    changeRepeat(nextRepeat);\n  }\n\n  render() {\n    const {\n      playState, song, playNext, playPrevious, currentTime, repeatType: repeat,\n      togglePlaying: toggle, timeDrag, openSnackbar,\n    } = this.props;\n\n    return (\n      <Paper className=\"play-control\">\n        <h3 className=\"song-title\">{ song.name }</h3>\n        <Slider style={{ height: '2px' }} className=\"song-progress\" value={currentTime} onChange={(_, newVal) => timeDrag(newVal)} max={100} min={0} defaultValue={2} />\n        <div className=\"now-playing-container\">\n          <div style={{ width: '35%', textAlign: 'center' }} className=\"side-icons\">\n            <IconButton onClick={this.changeRepeat}>\n              { repeat === 1\n                ? <RepeatOne /> : <Repeat style={repeat === 2 ? {} : { opacity: 0.5 }} />\n              }\n            </IconButton>\n            <IconButton onClick={playPrevious}>\n              <SkipPrevious />\n            </IconButton>\n          </div>\n          <div style={{ width: '30%', textAlign: 'center' }} className=\"play-pause-button\">\n            <IconButton onClick={toggle}>\n              { playState.playing ? <PauseIcon /> : <PlayIcon /> }\n            </IconButton>\n          </div>\n          <div style={{ width: '35%', textAlign: 'center' }} className=\"side-icons\">\n            <IconButton onClick={playNext}>\n              <SkipNext />\n            </IconButton>\n            <ShuffleIcon\n              className=\"material-icons\"\n              style={{ color: 'rgba(0, 0, 0, 0.3)' }}\n              onClick={() => openSnackbar('Shuffle doesn\\'t work yet, You can make a PR 😊')}\n            />\n          </div>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPlayingCtrl.defaultProps = {\n  installEvent: null,\n};\n\nPlayingCtrl.propTypes = {\n  timeDrag: propTypes.func.isRequired,\n  playNext: propTypes.func.isRequired,\n  playPrevious: propTypes.func.isRequired,\n  openSnackbar: propTypes.func.isRequired,\n  repeatType: propTypes.number.isRequired,\n  changeRepeat: propTypes.func.isRequired,\n  currentTime: propTypes.number.isRequired,\n  togglePlaying: propTypes.func.isRequired,\n  song: propTypes.objectOf(propTypes.any).isRequired,\n  playState: propTypes.objectOf(propTypes.any).isRequired,\n  installEvent: propTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayingCtrl);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport Album from '@material-ui/icons/Album';\n\nimport PlayingCtrl from '../components/PlayingCtrl';\n\nconst PlayingView = ({\n  playNext, timeDrag, repeatType, currentTime,\n  playingSong, openSnackbar, playPrevious, installEvent,\n}) => (\n  <div>\n    <div style={{\n      display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '30px',\n    }}\n    >\n      <Album style={{ width: '300px', fontSize: '300px', color: 'rgba(0,0,0,0.3)' }} />\n    </div>\n    <PlayingCtrl\n      song={playingSong}\n      playNext={playNext}\n      timeDrag={timeDrag}\n      repeatType={repeatType}\n      installEvent={installEvent}\n      currentTime={currentTime}\n      openSnackbar={openSnackbar}\n      playPrevious={playPrevious}\n    />\n  </div>\n);\n\nPlayingView.defaultProps = {\n  installEvent: () => {},\n};\n\nPlayingView.propTypes = {\n  timeDrag: propTypes.func.isRequired,\n  playNext: propTypes.func.isRequired,\n  repeatType: propTypes.number.isRequired,\n  openSnackbar: propTypes.func.isRequired,\n  playPrevious: propTypes.func.isRequired,\n  installEvent: propTypes.func,\n  currentTime: propTypes.number.isRequired,\n  playingSong: propTypes.objectOf(propTypes.any).isRequired,\n};\n\nexport default PlayingView;\n","const ACTION_KEYS = [\n  'ARROWLEFT',\n  'ARROWRIGHT',\n  'SPACE',\n];\n\nexport default function keyboardEvents(handlers) {\n  const handler = (e) => {\n    const upperCaseKey = e.code.toUpperCase();\n\n    if (ACTION_KEYS.indexOf(upperCaseKey) === -1) {\n      return;\n    }\n\n    const {\n      playNext,\n      playPrevious,\n      togglePlaying,\n    } = handlers;\n\n    switch (upperCaseKey) {\n      case 'ARROWLEFT':\n        playPrevious();\n        break;\n      case 'ARROWRIGHT':\n        playNext();\n        break;\n      case 'SPACE':\n        togglePlaying();\n        break;\n      default:\n        break;\n    }\n  };\n  window.addEventListener('keydown', handler);\n  return () => window.removeEventListener('keydown', handler);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport { SEARCH_PAGE, PLAYLIST_PAGE, NOW_PLAYING_PAGE,  togglePlaying, playSong, fetchSongs } from './actions';\n\nimport PlayListView from './views/PlayListView';\nimport SearchView from \"./views/SearchView\";\nimport Header from './components/Header';\nimport PlayingView from './views/PlayingView';\nimport keyboardEvents from './utils/keyboardEvents';\n\n\nconst mapStateToProps = state => ({\n  searchResult: state.searchResult,\n  page: state.page,\n  songs: state.songs,\n  playState: state.playState,\n  repeatType: state.common.repeat,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggle: () => dispatch(togglePlaying()),\n  playSong: id => dispatch(playSong(id)),\n  searchSong: keyword => dispatch(fetchSongs(keyword)),\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTime: 0,\n      snackBarOpen: false,\n      hasRejectedInstall: false,\n      snackMsg: '',\n      hideSnackAction: false,\n      installEvent: null,\n      addToHomeScreenUIVisible: false,\n    };\n  }\n\n  componentDidMount() {\n    const { songs, toggle } = this.props;\n    if (songs[0]) {\n      if(songs[0].source === 'local') {\n        this.audioPlayer.src = URL.createObjectURL(songs[0].detail);\n      } else { // network song\n        this.audioPlayer.src = songs[0].detail.url;\n      }\n      \n    }\n    this.releaseKeyboardEvents = keyboardEvents({\n      playNext: this.playNext,\n      playPrevious: this.playPrevious,\n      togglePlaying: toggle,\n    });\n    window.addEventListener('beforeinstallprompt', (e) => {\n      // Prevent Chrome 67 and earlier from automatically showing the prompt\n      e.preventDefault();\n      // Stash the event so it can be triggered later.\n      this.setState({ installEvent: e, addToHomeScreenUIVisible: true });\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { playState } = this.props;\n    const { songs } = nextProps;\n    const { installEvent, hasRejectedInstall } = this.state;\n    if (nextProps.playState !== playState) {\n      if (!nextProps.playState.playing) {\n        // PAUSE\n        this.audioPlayer.pause();\n      } else if (nextProps.playState.songId === -2) { // play last song\n        this.playSong(songs.length - 1);\n      } else if (nextProps.playState.songId === -1) {\n        this.playSong(0);\n      } else if (nextProps.playState.songId === playState.songId) {\n        // RESUME\n        console.log('Should only resume');\n        this.audioPlayer.play();\n        // Start playing\n      } else {\n        this.playSong(nextProps.playState.songId);\n      }\n      if (installEvent && !hasRejectedInstall) {\n        installEvent.prompt();\n        installEvent.userChoice.then((choiceResult) => {\n          if (choiceResult.outcome === 'accepted') {\n            this.setState({\n              snackBarOpen: true,\n              hideSnackAction: true,\n              hasRejectedInstall: false,\n              snackMsg: '🤗 Yay! You\\'ve installed the app',\n            });\n          } else {\n            this.setState({\n              snackBarOpen: true,\n              hideSnackAction: true,\n              hasRejectedInstall: true,\n              snackMsg: '😥 Reload the page whenever you change your mind',\n            });\n          }\n          this.snackBarOpen({ installEvent: null });\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.releaseKeyboardEvents();\n  }\n\n  playNext = () => {\n    const { songs, playState, playSong: play } = this.props;\n    URL.revokeObjectURL(songs[playState.songId]);\n    const nextSongId = (playState.songId + 1) % songs.length;\n    play(nextSongId);\n  }\n\n  songEnded = () => {\n    const {\n      songs, playState, repeatType, playSong: play,\n    } = this.props;\n    // No repeat\n    if (repeatType === 0) {\n      URL.revokeObjectURL(songs[playState.songId]);\n      if (playState.songId < songs.length - 1) play(playState.songId + 1);\n    } else if (repeatType === 1) {\n      // repeat one\n      play(playState.songId);\n      // repeat all\n    } else this.playNext();\n  }\n\n  playPrevious = () => {\n    const { songs, playState, playSong: play } = this.props;\n    URL.revokeObjectURL(songs[playState.songId]);\n    const prevSongId = playState.songId === 0 ? songs.length - 1 : playState.songId - 1;\n    play(prevSongId);\n  }\n\n  updateTime = () => {\n    const currentTime = 100 * this.audioPlayer.currentTime / this.audioPlayer.duration || 0;\n    this.setState({ currentTime });\n  }\n\n  playSong = (id) => {\n    const { songs } = this.props;\n    if (songs[id]) {\n\n      let url = songs[id].source === 'local' ? URL.createObjectURL(songs[id].detail) : songs[id].detail.url;\n      this.audioPlayer.src = url;\n\n      this.audioPlayer.play();\n      window.document.title = songs[id].detail.name.replace('.mp3', '');\n    }\n  }\n\n  timeDrag = (time) => {\n    this.audioPlayer.currentTime = this.audioPlayer.duration * (time / 100);\n  }\n\n  handleActionClick = () => {\n    window.open('https://github.com/ashinzekene/react-music-player', '_blank');\n  }\n\n  handleRequestClose = () => {\n    this.setState({ snackBarOpen: false, snackMsg: '', hideSnackAction: false });\n  }\n\n  handleSearch = (keyword) => {\n    const { searchSong } = this.props;\n    searchSong(keyword);\n  }\n\n  renderMain = target => {\n    const {\n      currentTime, snackBarOpen, snackMsg, installEvent, addToHomeScreenUIVisible, hideSnackAction,\n    } = this.state;\n    const {\n      searchResult, songs, playState, toggle, repeatType, page,\n    } = this.props;\n    switch (target) {\n      case SEARCH_PAGE:\n        return <SearchView\n        searchResult={searchResult}\n        toggle={toggle}\n        playState={playState}\n        currentTime={currentTime}\n        openSnackbar={msg => this.setState({ snackBarOpen: true, snackMsg: msg })} />\n\n      case PLAYLIST_PAGE:\n        return <PlayListView\n          songs={songs}\n          toggle={toggle}\n          playState={playState}\n          currentTime={currentTime}\n          openSnackbar={msg => this.setState({ snackBarOpen: true, snackMsg: msg })} />\n\n      case NOW_PLAYING_PAGE:\n        return <PlayingView\n          repeatType={repeatType}\n          playNext={this.playNext}\n          timeDrag={this.timeDrag}\n          installEvent={installEvent}\n          currentTime={currentTime}\n          playPrevious={this.playPrevious}\n          playingSong={songs[playState.songId]}\n          openSnackbar={msg => this.setState({ snackBarOpen: true, snackMsg: msg })}\n        />\n\n      default:\n        return <PlayListView\n          songs={songs}\n          toggle={toggle}\n          playState={playState}\n          currentTime={currentTime}\n          openSnackbar={msg => this.setState({ snackBarOpen: true, snackMsg: msg })} />\n    }\n\n  }\n\n  render() {\n    const {\n      currentTime, snackBarOpen, snackMsg, installEvent, addToHomeScreenUIVisible, hideSnackAction,\n    } = this.state;\n    const {\n      songs, playState, toggle, repeatType, page,\n    } = this.props;\n    return (\n      <>\n        <Header\n          playState={playState}\n          addToHomeScreenUIVisible={addToHomeScreenUIVisible}\n          playingSong={songs[playState.songId]}\n          openSnackbar={() => this.setState({ snackBarOpen: true })}\n          onSearch={(keyword) => this.handleSearch(keyword)}\n        />\n        <audio\n          hidden\n          controls\n          onEnded={this.songEnded}\n          onTimeUpdate={this.updateTime}\n          ref={(audio) => { this.audioPlayer = audio; }}\n        >\n          <track kind=\"captions\" {...{}} />\n        </audio>\n        {this.renderMain(page)}\n        <Snackbar\n          open={snackBarOpen}\n          autoHideDuration={6000}\n          onClose={this.handleRequestClose}\n          ContentProps={{ 'aria-describedby': 'message-id' }}\n          message={(\n            <span id=\"message-id\">{snackMsg || 'Not Implemented yet 😊'}</span>\n          )}\n          action={\n            !hideSnackAction && (\n              <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleActionClick}>\n                MAKE A PR\n              </Button>\n            )}\n        />\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  page: PropTypes.string.isRequired,\n  songs: PropTypes.arrayOf(PropTypes.any).isRequired,\n  playState: PropTypes.shape({\n    playing: PropTypes.bool.isRequired,\n    songId: PropTypes.number.isRequired,\n  }).isRequired,\n  repeatType: PropTypes.oneOf([0, 1, 2]).isRequired,\n  toggle: PropTypes.func.isRequired,\n  playSong: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_SONGS, REMOVE_SONGS } from '../actions';\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case ADD_SONGS: {\n      return [...state, ...action.songs];\n    }\n    case REMOVE_SONGS: {\n      return state.filter((song, index) => index !== action.id);\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { PLAY_SONG, TOGGLE_PLAYING } from '../actions/index';\n\nconst initalState = {\n  playing: false,\n  songId: -1,\n};\n\nexport default (state = initalState, action) => {\n  switch (action.type) {\n    case PLAY_SONG: {\n      return { playing: true, songId: action.id };\n    }\n    case TOGGLE_PLAYING: {\n      return Object.assign({}, state, { playing: !state.playing });\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { TOGGLE_SIDEBAR, REPEAT } from '../actions/index';\n\nconst initialState = {\n  sidebarOpen: false,\n  repeat: 0,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_SIDEBAR: {\n      return { ...state, sidebarOpen: !state.sidebarOpen };\n    }\n    case REPEAT: {\n      return { ...state, repeat: action.id };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from 'redux';\nimport songs from './songs';\nimport playState from './playState';\nimport common from './common';\nimport page from './page';\nimport searchResult from './searchResult';\n\nconst reducers = combineReducers({\n  searchResult,\n  songs,\n  common,\n  playState,\n  page,\n});\n\nexport default reducers;\n","import { RECEIVE_SEARCH_RESULT } from '../actions/index'\n\nexport default (state = [], action) => {\n    switch (action.type) {\n        case RECEIVE_SEARCH_RESULT: {\n            return [...action.songs];\n        }\n        default: {\n            return state;\n        }\n    }\n};","import {\n  SEARCH_PAGE, HOME_PAGE, NOW_PLAYING_PAGE, SETTINGS_PAGE, PLAYLIST_PAGE,\n} from '../actions/index';\n\nexport default (state = SEARCH_PAGE, action) => {\n  switch (action.type) {\n    case SEARCH_PAGE: {\n      return SEARCH_PAGE;\n    }\n    case HOME_PAGE: {\n      return HOME_PAGE;\n    }\n    case PLAYLIST_PAGE: {\n      return PLAYLIST_PAGE;\n    }\n    case NOW_PLAYING_PAGE: {\n      return NOW_PLAYING_PAGE;\n    }\n    case SETTINGS_PAGE: {\n      return SETTINGS_PAGE;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","export default store => next => (action) => {\n  console.group(action.type,);\n  console.info('PREVIOUS STATE', store.getState());\n  const result = next(action);\n  console.log('ACTION', action);\n  console.log('NEXT STATE', store.getState());\n  console.groupEnd();\n  return result;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport reducers from './reducers';\nimport loggerMiddleware from './middleware';\nimport { saveState, getState } from './store/localStore';\nimport mediaNotification from './utils/media-session';\nimport thunk from 'redux-thunk'\n\nconst muiTheme = createMuiTheme({\n  palette: {\n    primary: deepPurple,\n  },\n});\n\nconst middleware = [ thunk ]\n\ngetState().then((localState) => {\n  let store;\n  if (process.env.NODE_ENV === 'development') {\n    // store = createStore(reducers, localState, applyMiddleware(...middleware));\n    store = createStore(reducers, localState, applyMiddleware(thunk));\n  } else {\n    store = createStore(reducers, localState, applyMiddleware(loggerMiddleware, thunk));\n  }\n  mediaNotification.setStore(store);\n  store.subscribe(() => {\n    saveState({\n      songs: store.getState().songs,\n    });\n  });\n  ReactDOM.render(\n    // eslint-disable-next-line\n    <Provider store={store}>\n      <MuiThemeProvider theme={muiTheme}>\n        <App />\n      </MuiThemeProvider>\n    </Provider>, document.getElementById('root'),\n  );\n});\nregisterServiceWorker();\n","import * as LocalForage from 'localforage';\n\nexport const saveState = (state) => {\n  LocalForage.setItem('state', state);\n};\n\nexport const getState = () => LocalForage.getItem('state').then((state) => {\n  if (state === null) {\n    return undefined;\n  }\n  return state;\n});\n"],"sourceRoot":""}